import time
from pathlib import Path
from typing import Callable

from watchdog.events import FileSystemEventHandler
from watchdog.observers import Observer

from src.logger import logger


class FolderWatcher(FileSystemEventHandler):
    """–ö–ª–∞—Å—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è callback-—Ñ—É–Ω–∫—Ü–∏–∏."""

    def __init__(
            self,
            folder_path: str | Path,
            callback: Callable[[], None],
            periodic_interval: float | int = 120,  # 2 –º–∏–Ω—É—Ç—ã
            event_delay: float | int = 3
    ):
        """–ö–ª–∞—Å—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è callback-—Ñ—É–Ω–∫—Ü–∏–∏.

        –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤)
        –∏ –≤—ã–∑—ã–≤–∞–µ—Ç callback-—Ñ—É–Ω–∫—Ü–∏—é –ø–æ —Å–æ–±—ã—Ç–∏—è–º —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Å –∑–∞–¥–∞–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π,
        –∞ —Ç–∞–∫ –∂–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –≤—Ä–µ–º–µ–Ω–∏.

        Args:
            folder_path (str | Path): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å
            callback (Callable[[], None]): –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            periodic_interval (float | int): –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–∑–æ–≤–∞ callback (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö).
                –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 120 —Å–µ–∫—É–Ω–¥ (2 –º–∏–Ω—É—Ç—ã)
            event_delay (float | int): –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–±—ã—Ç–∏–π —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö).
                –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 3 —Å–µ–∫—É–Ω–¥—ã
        """
        # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–≥–æ –ø—É—Ç–∏ –∫ –æ–±—ä–µ–∫—Ç—É Path –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏
        self.folder_path: Path = Path(folder_path)
        self.callback: Callable[[], None] = callback
        self.periodic_interval: float = float(periodic_interval)
        self.event_delay: float = float(event_delay)

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        self.event_triggered: bool = False  # –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        self.last_event_time: float = 0.0  # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è
        self.is_processing: bool = False  # –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
        self.observer: Observer | None = None  # –û–±—ä–µ–∫—Ç –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã. –ë—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ –º–µ—Ç–æ–¥–µ monitor

    def on_any_event(self, event) -> None:
        """
        –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ FileSystemEventHandler.
        –ú–µ—Ç–æ–¥ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –≤ —Ü–µ–ª–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ).

        –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ .tmp, .part, ~),
        —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–Ω—É–∂–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü—Ä–∏ –≤–∞–ª–∏–¥–Ω–æ–º —Å–æ–±—ã—Ç–∏–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è.

        Args:
            event (FileSystemEvent): –°–æ–±—ã—Ç–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ —Å–æ–±—ã—Ç–∏—è
                –∏ –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª—É.
        """
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–±—ã—Ç–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        ignored_extensions = {".tmp", ".part", "~"}
        if (
                event.event_type == "deleted"
                or any(event.src_path.endswith(ext) for ext in ignored_extensions)
        ):
            return

        logger.info(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: {event.src_path} ({event.event_type})")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–æ–±—ã—Ç–∏—è –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        self.event_triggered = True
        self.last_event_time = time.time()

    def monitor(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π.

        –ú–µ—Ç–æ–¥ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (watchdog), –∑–∞–ø—É—Å–∫–∞–µ—Ç –µ–≥–æ –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç
        –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π:
        - –ü–æ —Å–æ–±—ã—Ç–∏—è–º —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π event_delay).
        - –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ (—Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º periodic_interval), –µ—Å–ª–∏ —Å–æ–±—ã—Ç–∏–π –Ω–µ –±—ã–ª–æ.
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—â–∏—â–µ–Ω–∞ –æ—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –≤–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫.

        Raises:
            Exception: –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è callback.
        """
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è
        self.observer = Observer()
        try:
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (–±–µ–∑ —Ä–µ–∫—É—Ä—Å–∏–∏)
            self.observer.schedule(self, str(self.folder_path), recursive=False)
            self.observer.start()
            logger.info(f"üîç –ó–∞–ø—É—â–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {self.folder_path}")
        except Exception as e:
            logger.error(f"‚õî –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è: {e}")
            return

        try:
            last_processed_time: float = 0.0
            while True:
                current_time = time.time()

                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª, –µ—Å–ª–∏ –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
                if self.is_processing:
                    time.sleep(.1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ CPU
                    continue

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:
                # 1. –ë—ã–ª–æ —Å–æ–±—ã—Ç–∏–µ, –∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –µ–≥–æ —Ñ–∏–∫—Å–∞—Ü–∏–∏
                # 2. –ü—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                should_process = (
                                         self.event_triggered and
                                         current_time - self.last_event_time >= self.event_delay
                                 ) or (current_time - last_processed_time >= self.periodic_interval)

                if should_process:
                    logger.info("‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ —Å–æ–±—ã—Ç–∏—é –∏–ª–∏ —Ç–∞–π–º–µ—Ä—É)")
                    self.is_processing = True
                    try:
                        # –í—ã–ø–æ–ª–Ω—è–µ–º callback –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                        self.callback()
                    except Exception as e:
                        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ callback, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
                        logger.error(f"‚õî –û—à–∏–±–∫–∞ –≤ callback: {type(e).__name__}: {e}")
                    finally:
                        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                        self.event_triggered = False
                        self.is_processing = False
                        last_processed_time = current_time

                # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —á—Ä–µ–∑–º–µ—Ä–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ CPU
                time.sleep(.1)

        except KeyboardInterrupt:
            logger.info("‚úîÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            logger.error(f"‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {type(e).__name__}: {e}")
        finally:
            # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è
            if self.observer:
                self.observer.stop()
                self.observer.join()
            logger.info("‚úîÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω")
