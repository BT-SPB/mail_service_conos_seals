import email
import imaplib
import time
import traceback
from pathlib import Path
from email.message import Message
from email.utils import parseaddr
import ssl

from imapclient import IMAPClient, exceptions

from config import CONFIG
from src.logger import logger
from src.utils import write_json, sanitize_pathname
from src.utils_email import (
    convert_email_date_to_moscow,
    decode_subject,
    extract_text_content,
    extract_attachments,
)


class EmailMonitor:
    """
    –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç –Ω–æ–≤—ã–µ –ø–∏—Å—å–º–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º IMAP IDLE –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫—É imapclient –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ
    –ø–∏—Å—å–º–∞ –≤ –ø–∞–ø–∫–µ INBOX, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –≤–ª–æ–∂–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ –¥–∏—Å–∫ –∏ –æ—Ç–º–µ—á–∞–µ—Ç
    –ø–∏—Å—å–º–∞ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ. –ü—Ä–∏–º–µ–Ω—è–µ—Ç –∫–∞–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ (IDLE), —Ç–∞–∫ –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é
    –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏.
    """

    def __init__(
            self,
            email_user: str,
            email_pass: str,
            imap_server: str,
            imap_port: int,
            idle_timeout: int = 10,
            forced_timeout: int = 300,
    ) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ IMAP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.

        Args:
            email_user: –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            email_pass: –ü–∞—Ä–æ–ª—å –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —è—â–∏–∫—É
            imap_server: –ê–¥—Ä–µ—Å IMAP-—Å–µ—Ä–≤–µ—Ä–∞
            imap_port: –ü–æ—Ä—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É
            idle_timeout: –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ IDLE, –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            forced_timeout: –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        self.email_user: str = email_user
        self.email_pass: str = email_pass
        self.imap_server: str = imap_server
        self.imap_port: int = imap_port
        self.forced_timeout = forced_timeout
        self.idle_timeout = idle_timeout

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        self.running: bool = False
        self.server: IMAPClient | None = None

    def connect(self):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å IMAP-—Å–µ—Ä–≤–µ—Ä–æ–º.

        –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç IMAPClient —Å SSL, –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ö–æ–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ø–∞–ø–∫—É INBOX –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.
        """
        # –ï—Å–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ‚Äî –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
        if self.server:
            self.disconnect()

        try:
            self.server = IMAPClient(self.imap_server, port=self.imap_port, ssl=True)
            self.server.login(self.email_user, self.email_pass)
            self.server.select_folder("INBOX")  # –í—ã–±–∏—Ä–∞–µ–º –ø–∞–ø–∫—É INBOX –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö –ø–∏—Å–µ–º
            logger.info("üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É")
        except Exception as e:
            logger.error(f"‚õî –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É: {e}\n{traceback.format_exc()}")
            self.server = None

    def disconnect(self) -> None:
        """
        –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å IMAP-—Å–µ—Ä–≤–µ—Ä–æ–º, –∑–∞–≤–µ—Ä—à–∞—è —Ä–µ–∂–∏–º IDLE –∏ –≤—ã–ø–æ–ª–Ω—è—è logout.
        """
        if not self.server:
            return

        try:
            # –ó–∞–≤–µ—Ä—à–∞–µ–º IDLE, –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
            self.server.idle_done()
        except Exception:
            # –û—à–∏–±–∫–∏ IDLE –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ
            pass

        try:
            # –í—ã–ø–æ–ª–Ω—è–µ–º logout –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
            self.server.logout()
            logger.info("üîî IMAP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
        except (exceptions.IMAPClientError, OSError, ssl.SSLError) as e:
            logger.warning(f"‚ö†Ô∏è IMAP logout –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π (–≤–æ–∑–º–æ–∂–Ω–æ –æ–∂–∏–¥–∞–µ–º–æ): {e}")
        except Exception as e:
            logger.error(f"‚õî –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ IMAP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}\n{traceback.format_exc()}")
        finally:
            self.server = None

    def stop(self) -> None:
        """
        –ó–∞–≤–µ—Ä—à–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
        """
        if not self.running:
            logger.debug("üîî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—á—Ç—ã –£–ñ–ï –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            return
        self.running = False
        self.disconnect()
        logger.info("üîî –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—á—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def process_unseen_email_inbox(self) -> None:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ –≤ –ø–∞–ø–∫–µ INBOX.

        –ò—â–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –≤–ª–æ–∂–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è –≤
        —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É, —Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö metadata.json –∏ –æ—Ç–º–µ—á–∞–µ—Ç –ø–∏—Å—å–º–∞
        –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.

        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç peek –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏—Å–µ–º –±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–º–µ—Ç–∫–∏ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö,
        —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤—Ä—É—á–Ω—É—é. –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ø–∏—Å—å–º–∞ —Å –æ—à–∏–±–∫–∞–º–∏,
        –ª–æ–≥–∏—Ä—É—è –∏—Ö, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö.


        Returns:
            None
        """
        try:
            # –ü–æ–∏—Å–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º
            message_ids = self.server.search(["UNSEEN"])
            if not message_ids:
                logger.info("‚ûñ –ù–æ–≤—ã—Ö –ø–∏—Å–µ–º –Ω–µ—Ç")
                return

            logger.info(f"üìß –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º: {len(message_ids)}")

            # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–∏—Å—å–º–∞
            for msg_id in message_ids:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (BODY.PEEK)
                    msg_data = self.server.fetch(msg_id, ["BODY.PEEK[]"])
                    if not msg_data or msg_id not in msg_data:
                        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ ID {msg_id}")
                        continue

                    # –ü–∞—Ä—Å–∏–º –ø–∏—Å—å–º–æ –≤ –æ–±—ä–µ–∫—Ç Message –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
                    email_message: Message = email.message_from_bytes(msg_data[msg_id][b"BODY[]"])

                    # –°–æ–±–∏—Ä–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                    metadata = {
                        "subject": decode_subject(email_message.get("Subject", "")),
                        "sender": parseaddr(email_message.get("From", ""))[1],
                        "date": email_message.get("Date", "Unknown date"),
                        "text_content": extract_text_content(email_message) or "No text content",
                        "files": [],
                        "errors": [],
                        "successes": [],
                    }

                    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π
                    attachments: list[tuple[str, bytes]] = extract_attachments(email_message)

                    if not attachments:
                        logger.info(f"üìß –ü–∏—Å—å–º–æ –æ—Ç {metadata['sender']} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–ª–æ–∂–µ–Ω–∏–π")
                        # –û—Ç–º–µ—Ç–∫–∞ –ø–∏—Å—å–º–∞ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
                        self.server.add_flags(msg_id, ["\\Seen"])
                        continue

                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π –ø—Ä–∏ –∏—Ö –Ω–∞–ª–∏—á–∏–∏
                    logger.info(f"üìß –í –ø–∏—Å—å–º–µ –æ—Ç {metadata['sender']} –Ω–∞–π–¥–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–π: {len(attachments)}")

                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
                    date_time = convert_email_date_to_moscow(metadata["date"], "%y%m%d_%H%M%S")
                    folder_path = sanitize_pathname(
                        CONFIG.IN_FOLDER / f"{date_time}_{metadata['sender']}",
                        is_file=False
                    )

                    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                    folder_path.mkdir(exist_ok=True, parents=True)
                    logger.debug(f"‚úîÔ∏è –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {folder_path}")

                    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –≤–ª–æ–∂–µ–Ω–∏—è
                    for file_name, content in attachments:
                        file_ext = Path(file_name).suffix.lower()
                        if file_ext not in CONFIG.valid_ext:
                            valid_ext_text = ", ".join(f"'*{ext}'" for ext in CONFIG.valid_ext)
                            warning_message = (
                                f"{file_name}: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ. "
                                f"–î–æ–ø—É—Å—Ç–∏–º—ã–µ: {valid_ext_text}."
                            )
                            metadata["errors"].append(warning_message)
                            logger.warning(f"‚ùå {warning_message}")
                            continue

                        # –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
                        file_path = sanitize_pathname(folder_path / file_name, is_file=True)

                        try:
                            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
                            file_path.write_bytes(content)
                            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                            metadata["files"].append(f"{file_path.name}")
                            logger.info(f"üíæ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {file_path}")
                        except OSError as e:
                            logger.error(f"‚õî –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")

                    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
                    write_json(folder_path / "metadata.json", metadata)
                    logger.info(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {folder_path / 'metadata.json'}")

                    # –û—Ç–º–µ—á–∞–µ–º –ø–∏—Å—å–º–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    self.server.add_flags(msg_id, ["\\Seen"])
                    logger.info(f"‚úîÔ∏è –ü–∏—Å—å–º–æ ID {msg_id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ")

                except Exception as e:
                    logger.error(f"‚õî –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å—å–º–∞ ID {msg_id}: {e}\n{traceback.format_exc()}")

        except Exception as e:
            logger.error(f"‚õî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∏—Å–µ–º: {e}\n{traceback.format_exc()}")

    def monitor(self) -> None:
        """
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—á—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∂–∏–º IDLE –∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É.

        –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –Ω–∞—á–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–∏—Å–µ–º, –∑–∞—Ç–µ–º –≤ —Ü–∏–∫–ª–µ –æ–∂–∏–¥–∞–µ—Ç –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º —á–µ—Ä–µ–∑ IDLE.
        –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏—Å–µ–º –Ω–∞ —Å–ª—É—á–∞–π –ø–æ—Ç–µ—Ä–∏ IDLE-—Å–æ–±—ã—Ç–∏–π.
        –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.
        """
        self.running = True
        last_check_time = 0

        try:
            self.connect()
            logger.info(f"üîÑ IDLE-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ—á—Ç—ã (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∞–π–º–∞—É—Ç {self.forced_timeout} —Å–µ–∫)")

            while self.running:
                try:
                    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º
                    if time.time() - last_check_time >= self.forced_timeout:
                        logger.debug("üïí –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ email –ø–æ —Ç–∞–π–º–µ—Ä—É")
                        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                        self.process_unseen_email_inbox()
                        last_check_time = time.time()

                    # –í—Ö–æ–¥–∏–º –≤ —Ä–µ–∂–∏–º IDLE ‚Äî –æ–∂–∏–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
                    self.server.idle()
                    responses = self.server.idle_check(timeout=self.idle_timeout)
                    self.server.idle_done()

                    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è, –∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
                    if responses:
                        logger.debug(f"üîî IDLE —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {responses}")
                        self.process_unseen_email_inbox()
                        last_check_time = time.time()

                except Exception as e:
                    if not self.running:
                        # –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –≤ –º–æ–º–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ‚Äî –Ω–µ –ª–æ–≥–∏—Ä—É–µ–º
                        break

                    logger.error(f"‚õî –û—à–∏–±–∫–∞ –≤ IDLE-—Ü–∏–∫–ª–µ: {e}\n{traceback.format_exc()}")
                    self.disconnect()
                    time.sleep(5)  # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä—É –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º
                    if self.running:
                        self.connect()
                        logger.info("üîÑ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏")
                        self.process_unseen_email_inbox()  # –ü–æ—Å–ª–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                        last_check_time = time.time()

        except Exception as e:
            logger.error(f"‚õî –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}\n{traceback.format_exc()}")

# --- –ó–ê–ü–ê–°–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ---
# –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –∏—Å–ø–æ–ª—å–∑—É—è –≤–µ—á–Ω—ã–π —Ü–∏–∫–ª
# def process_email_inbox_simple(
#         email_user: str,
#         email_pass: str,
#         imap_server: str,
#         imap_port: int,
# ) -> None:
#     """
#     –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–∏—Å—å–º–∞ –≤ IMAP-—è—â–∏–∫–µ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è.
#     –í –∫–∞—á–µ—Å—Ç–≤–µ imap –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è imaplib.
#
#     –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —è—â–∏–∫—É, –∏—â–µ—Ç –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
#     –∏ –≤–ª–æ–∂–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫—É IN_FOLDER —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º, —Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª
#     metadata.json —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∏—Å—å–º–µ –∏ —Ñ–∞–π–ª–∞—Ö. –ü–∏—Å—å–º–∞ –æ—Ç–º–µ—á–∞—é—Ç—Å—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ
#     —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
#
#     Args:
#         email_user: –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#         email_pass: –ü–∞—Ä–æ–ª—å –æ—Ç –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞
#         imap_server: –ê–¥—Ä–µ—Å IMAP-—Å–µ—Ä–≤–µ—Ä–∞
#         imap_port: –ü–æ—Ä—Ç IMAP-—Å–µ—Ä–≤–µ—Ä–∞
#
#     Returns:
#         None: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª—ã –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –Ω–∞ –¥–∏—Å–∫.
#     """
#     # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
#     try:
#         mail = imaplib.IMAP4_SSL(imap_server, imap_port)  # –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
#         mail.login(email_user, email_pass)  # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
#         mail.select("INBOX")  # –í—ã–±–æ—Ä –ø–∞–ø–∫–∏ "–í—Ö–æ–¥—è—â–∏–µ"
#         logger.info("–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å IMAP-—Å–µ—Ä–≤–µ—Ä–æ–º")
#     except Exception as e:
#         logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ IMAP-—Å–µ—Ä–≤–µ—Ä—É: {e}")
#         return
#
#     try:
#         # –ü–æ–∏—Å–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º
#         status, messages = mail.search(None, "UNSEEN")
#         if status != "OK":
#             logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º")
#             return
#         message_ids: list[bytes] = messages[0].split()
#         if not message_ids:
#             logger.info("–ù–æ–≤—ã—Ö –ø–∏—Å–µ–º –Ω–µ—Ç")
#             return
#
#         logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º: {len(message_ids)}")
#
#         # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–∏—Å—å–º–∞
#         for msg_id in message_ids:
#             msg_id_str = msg_id.decode('utf-8')
#             try:
#                 # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å—å–º–∞ –±–µ–∑ –æ—Ç–º–µ—Ç–∫–∏ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ
#                 status, msg_data = mail.fetch(msg_id_str, 'BODY.PEEK[]')
#                 if status != 'OK':
#                     logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∏—Å—å–º–æ ID {msg_id_str}")
#                     continue
#
#                 # –ü–∞—Ä—Å–∏–Ω–≥ email-—Å–æ–æ–±—â–µ–Ω–∏—è
#                 email_message: Message = email.message_from_bytes(msg_data[0][1])
#
#                 # –°–±–æ—Ä –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –ø–∏—Å—å–º–∞
#                 metadata = {
#                     "subject": decode_subject(email_message.get("Subject", "")),
#                     "sender": parseaddr(email_message.get("From", ""))[1],
#                     "date": email_message.get("Date", "Unknown date"),
#                     "text_content": extract_text_content(email_message) or "No text content",
#                     "files": [],
#                     "errors": []
#                 }
#
#                 # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π
#                 attachments: list[tuple[str, bytes]] = extract_attachments(email_message)
#
#                 if not attachments:
#                     logger.info(f"–ü–∏—Å—å–º–æ –æ—Ç {metadata['sender']} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–ª–æ–∂–µ–Ω–∏–π")
#                     # –û—Ç–º–µ—Ç–∫–∞ –ø–∏—Å—å–º–∞ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
#                     mail.store(msg_id_str, "+FLAGS", "\\Seen")
#                     continue
#
#                 # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π –ø—Ä–∏ –∏—Ö –Ω–∞–ª–∏—á–∏–∏
#                 logger.info(f"–í –ø–∏—Å—å–º–µ –æ—Ç {metadata['sender']} –Ω–∞–π–¥–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–π: {len(attachments)}")
#
#                 # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
#                 date_time = convert_email_date_to_moscow(metadata["date"], "%y%m%d_%H%M%S")
#
#                 folder_path = CONFIG.IN_FOLDER / sanitize_pathname(
#                     name=f"{date_time}_{metadata['sender']}",
#                     is_file=False,
#                     parent_dir=CONFIG.IN_FOLDER
#                 )
#                 # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
#                 folder_path.mkdir(exist_ok=True, parents=True)
#                 logger.debug(f"–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {folder_path}")
#
#                 # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ –≤–ª–æ–∂–µ–Ω–∏—è
#                 for file_name, content in attachments:
#                     file_ext = Path(file_name).suffix.lower()
#                     if file_ext not in CONFIG.valid_ext:
#                         valid_ext_text = ", ".join(f"'*{ext}'" for ext in CONFIG.valid_ext)
#                         error_msg = (
#                             f"{file_name}: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ. "
#                             f"–î–æ–ø—É—Å—Ç–∏–º—ã–µ: {valid_ext_text}."
#                         )
#                         metadata["errors"].append(error_msg)
#                         logger.warning(error_msg)
#                         continue
#
#                     # –°–æ–∑–¥–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
#                     file_path = folder_path / sanitize_pathname(
#                         file_name, is_file=True, parent_dir=folder_path
#                     )
#
#                     try:
#                         # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
#                         file_path.write_bytes(content)
#                         # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä—É: –∏–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
#                         # –∏ –∏–º—è –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
#                         metadata["files"].append((
#                             f"{file_path.name}",
#                             f"{file_path.stem}({file_path.suffix[1:]}).json"
#                         ))
#                         logger.info(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {file_path}")
#                     except OSError as e:
#                         logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
#
#                 # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
#                 write_json(folder_path / "metadata.json", metadata)
#                 logger.debug(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {folder_path / 'metadata.json'}")
#
#                 # –û—Ç–º–µ—á–∞–µ–º –ø–∏—Å—å–º–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
#                 mail.store(msg_id_str, '+FLAGS', '\\Seen')
#                 logger.info(f"–ü–∏—Å—å–º–æ ID {msg_id_str} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ")
#
#             except Exception as e:
#                 logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å—å–º–∞ ID {msg_id_str}: {traceback.format_exc()}")
#
#     except Exception:
#         logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∏—Å–µ–º: {traceback.format_exc()}")
#
#     finally:
#         # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
#         try:
#             mail.close()
#             mail.logout()
#             logger.info("IMAP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ")
#         except Exception as e:
#             logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ IMAP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
