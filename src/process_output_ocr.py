import shutil
from pathlib import Path

from config import CONFIG
from src.logger import logger
from src.utils import (
    read_json,
    write_json,
    file_to_base64,
    transfer_files,
    sanitize_pathname,
    is_directory_empty,
)
from src.utils_1c import cup_http_request, send_production_data
from src.utils_email import send_email


def process_output_ocr(
        email_user: str,
        email_pass: str,
        smtp_server: str,
        smtp_port: int
) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã OCR, –∏–∑–≤–ª–µ–∫–∞—è –Ω–æ–º–µ—Ä–∞ —Å–¥–µ–ª–æ–∫ –∏–∑ –¶–£–ü –ø–æ –∫–æ–Ω–æ—Å–∞–º–µ–Ω—Ç—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—è –Ω–æ–º–µ—Ä–∞ –ø–ª–æ–º–± –¶–£–ü.

    –§—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ OCR, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª—ã,
    –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –¶–£–ü –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    –∏–ª–∏ –æ—à–∏–±–æ–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ email –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –æ—à–∏–±–æ–∫ –∏ –æ—á–∏—â–∞–µ—Ç –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.

    Args:
        email_user: –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        email_pass: –ü–∞—Ä–æ–ª—å –æ—Ç –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞
        smtp_server: –ê–¥—Ä–µ—Å SMTP-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
        smtp_port: –ü–æ—Ä—Ç SMTP-—Å–µ—Ä–≤–µ—Ä–∞

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π, –Ω–æ –∏–∑–º–µ–Ω—è–µ—Ç —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email.
    """
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å —Ñ–∞–π–ª–æ–º metadata.json –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    folders_for_processing: list[Path] = [
        folder for folder in CONFIG.OUT_OCR_FOLDER.iterdir()
        if folder.is_dir() and (folder / "metadata.json").is_file()
    ]

    # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
    if folders_for_processing:
        logger.info(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(folders_for_processing)}")
    else:
        logger.info("üóø –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    for folder in folders_for_processing:
        try:
            # –ß–∏—Ç–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö –∏ –æ—à–∏–±–∫–∞—Ö
            metadata: dict = read_json(folder / "metadata.json")
            success_flag: bool = False  # –§–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ–π –¥–ª—è –ø–∞–ø–æ–∫ –æ—à–∏–±–æ–∫ –∏ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º sanitize_pathname –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∏–º–µ–Ω –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
            error_folder = CONFIG.ERROR_FOLDER / sanitize_pathname(
                folder.name, is_file=False, parent_dir=CONFIG.ERROR_FOLDER
            )
            success_folder = CONFIG.SUCCESS_FOLDER / sanitize_pathname(
                folder.name, is_file=False, parent_dir=CONFIG.SUCCESS_FOLDER
            )

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã (–∏—Å—Ö–æ–¥–Ω—ã–π –∏ JSON), —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
            for source_file_name, json_file_name in metadata["files"]:
                source_file: Path = folder / source_file_name
                json_file: Path = folder / json_file_name

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                if not source_file.is_file():
                    logger.warning(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª {source_file} –∏–∑ metadata.json")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è.")
                    transfer_files([source_file, json_file], error_folder, "move")
                    continue

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ JSON —Ñ–∞–π–ª–∞
                if not json_file.is_file():
                    logger.info(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç JSON-—Ñ–∞–π–ª {json_file}")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è.")
                    transfer_files([source_file, json_file], error_folder, "move")
                    continue

                # –ß–∏—Ç–∞–µ–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON
                json_data: dict = read_json(json_file)
                if not (
                        json_data.get("bill_of_lading") and
                        json_data.get("containers") and
                        all(
                            isinstance(cont, dict) and cont.get("container") and cont.get("seals")
                            for cont in json_data["containers"]
                        )
                ):
                    logger.info(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ {json_file}")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è.")
                    transfer_files([source_file, json_file], error_folder, "move")
                    continue

                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –¶–£–ü –ø–æ –∫–æ–Ω–æ—Å–∞–º–µ–Ω—Ç—É
                # –ü—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è: ["–ê–ê-0095444 –æ—Ç 14.04.2025"]
                transaction_number_raw: list[str] = cup_http_request(
                    "TransactionNumberFromBillOfLading", json_data["bill_of_lading"]
                )
                if not (transaction_number_raw and isinstance(transaction_number_raw, list)):
                    warning_message = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ –¶–£–ü"
                    logger.warning(f"‚ùå {warning_message}: {json_data['bill_of_lading']} ({json_file})")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è. {warning_message}")
                    transfer_files([source_file, json_file], error_folder, "move")
                    continue

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (—Å–∞–º—ã–π –Ω–æ–≤—ã–π –ø–æ –¥–∞—Ç–µ)
                transaction_number: str = transaction_number_raw[-1]
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
                container_numbers_cup: list[str] = cup_http_request(
                    "GetTransportPositionNumberByTransactionNumber",
                    # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å —Å –Ω–æ–º–µ—Ä–æ–º "–ê–ê-0095444" –∏–≥–Ω–æ—Ä–∏—Ä—É—è "–æ—Ç 14.04.2025"
                    transaction_number.split()[0],
                    encode=False
                )

                # –û–±–Ω–æ–≤–ª—è–µ–º JSON-–¥–∞–Ω–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
                json_data.update({
                    "transaction_number": transaction_number,
                    "source_file_base64": file_to_base64(source_file),
                    "source_file_name": source_file.name,
                })
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π JSON-—Ñ–∞–π–ª
                write_json(json_file, json_data)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ –¶–£–ü
                if not container_numbers_cup:
                    warning_message = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Å–¥–µ–ª–∫–∏ –∏–∑ –¶–£–ü"
                    logger.warning(f"‚ùå {warning_message}: {transaction_number} ({source_file})")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è. {warning_message}")
                    transfer_files([source_file, json_file], error_folder, "move")
                    continue

                # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ OCR –∏ –¶–£–ü
                container_numbers_cup_set: set[str] = set(container_numbers_cup)
                container_numbers_ocr_set: set[str] = {cont.get("container") for cont in json_data.get("containers")}

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –º–µ–∂–¥—É –Ω–∞–±–æ—Ä–∞–º–∏ –Ω–æ–º–µ—Ä–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
                if not container_numbers_cup_set & container_numbers_ocr_set:
                    warning_message = "–ù–æ–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏–∑ OCR –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è —Å –Ω–æ–º–µ—Ä–∞–º–∏ –∏–∑ –¶–£–ü"
                    logger.warning(f"‚ùå {warning_message}: {transaction_number} ({source_file})")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è. {warning_message}")
                    transfer_files([source_file, json_file], error_folder, "move")
                    continue

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
                container_numbers_difference = container_numbers_ocr_set - container_numbers_cup_set
                if container_numbers_difference:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, —Ç–∞–∫ –∫–∞–∫
                    # –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã
                    warning_message = (f"–ë—ã–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã –Ω–æ–º–µ—Ä–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç—Å—É—Å—Ç–≤—É—é—Ç –≤ –¶–£–ü: "
                                       f"{container_numbers_difference}")
                    logger.warning(f"‚ùå {warning_message}: {transaction_number} ({source_file})")
                    metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è. {warning_message}")
                    transfer_files([source_file, json_file], error_folder, "move")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä–∞ –ø–ª–æ–º–± –≤ –¶–£–ü
                # –ü—Ä–∏ –Ω–µ—É–¥–∞—á–µ –ª–æ–≥–∏—Ä—É–µ–º
                # if not send_production_data(json_data):
                #     warning_message = f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–º–µ—Ä–∞ –ø–ª–æ–º–± –≤ –¶–£–ü"
                #     logger.warning(f"‚ùå {warning_message}: {json_file}")
                #     metadata["errors"].append(f"{source_file_name}: –û—à–∏–±–∫–∞. {warning_message}")
                #     transfer_files([source_file, json_file], error_folder, "move")
                #     continue

                # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                logger.info(f"‚úîÔ∏è –§–∞–π–ª –§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ: {source_file}")
                transfer_files([source_file, json_file], success_folder, "move")
                success_flag = True

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            write_json(folder / "metadata.json", metadata)

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏: –∫–æ–ø–∏—Ä—É–µ–º/–ø–µ—Ä–µ–º–µ—â–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            if metadata["errors"]:
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏: –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ
                metadata_action = "copy2" if success_flag else "move"
                transfer_files(folder / "metadata.json", error_folder, metadata_action)

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–∏—Å—å–º–∞ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º –æ—à–∏–±–æ–∫
                error_files_text = "\n".join(
                    f"    {i}.  {error}"
                    for i, error in enumerate(metadata["errors"], 1)
                )
                email_text = (
                    f"–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç {metadata['date']} —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å:\n"
                    f"{error_files_text}\n\n"
                    f"–ö–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –ø—É—Ç–∏: {error_folder}"
                )
                send_email(
                    email_text=email_text,
                    recipient_email=metadata["sender"],
                    subject=f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –æ—Ç {email_user}",
                    email_user=email_user,
                    email_pass=email_pass,
                    smtp_server=smtp_server,
                    smtp_port=smtp_port,
                    email_format="plain"
                )

            # –ï—Å–ª–∏ –µ—Å—Ç—å —É—Å–ø–µ—à–Ω—ã–µ —Ñ–∞–π–ª—ã, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –≤ –ø–∞–ø–∫—É —É—Å–ø–µ—Ö–∞
            if success_flag:
                transfer_files(folder / "metadata.json", success_folder, "move")

            # –û—á–∏—â–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: —É–¥–∞–ª—è–µ–º, –µ—Å–ª–∏ –ø—É—Å—Ç–∞, –∏–ª–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏
            if is_directory_empty(folder):
                folder.rmdir()
                logger.info(f"‚úîÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {folder}")
            else:
                residual_destination = error_folder / f"residual_files"
                shutil.move(folder, residual_destination)
                logger.warning(
                    f"‚ùó‚ùó‚ùó –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ {folder.name}. "
                    f"–ü–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ {residual_destination} –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"
                )

        except Exception as e:
            logger.error(f"‚õî –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {folder}: {e}")
            continue
